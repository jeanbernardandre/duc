@mixin hrentreprises {
  margin-top: 50px;
  border: 1px solid $secondarybrown;
  max-width: 600px ;
  width: 600px;

  @media #{$max-sm} {
    margin-top: 20px;
    max-width: 300px;
  }
}

@function px2rem($size) {
  $remSize: ($size / 16);
  @return #{$remSize}rem;
}

@mixin tablet {
  @media (min-width: #{$tablet-width}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$desktop-width}) {
    @content;
  }
}

@mixin large {
  @media (min-width: #{$large-width}) {
    @content;
  }
}

@mixin transition($transition...) {
  -moz-transition:    $transition;
  -o-transition:      $transition;
  -webkit-transition: $transition;
  transition:         $transition;
}

@mixin transition-property($property...) {
  -moz-transition-property:    $property;
  -o-transition-property:      $property;
  -webkit-transition-property: $property;
  transition-property:         $property;
}

@mixin transition-duration($duration...) {
  -moz-transition-property:    $duration;
  -o-transition-property:      $duration;
  -webkit-transition-property: $duration;
  transition-property:         $duration;
}

@mixin transition-timing-function($timing...) {
  -moz-transition-timing-function:    $timing;
  -o-transition-timing-function:      $timing;
  -webkit-transition-timing-function: $timing;
  transition-timing-function:         $timing;
}

@mixin transition-delay($delay...) {
  -moz-transition-delay:    $delay;
  -o-transition-delay:      $delay;
  -webkit-transition-delay: $delay;
  transition-delay:         $delay;
}

@mixin transform($transform...) {
  -webkit-transform: $transform;
  -moz-transform: $transform;
  -ms-transform: $transform;
  -o-transform: $transform;
  transform: $transform;
}

@mixin border-radius($border-radius) {
  -webkit-border-radius: $border-radius;
  -moz-border-radius: $border-radius;
  border-radius: $border-radius;
}

@mixin box-shadow($border-shadow...) {
  -webkit-box-shadow: $border-shadow;
  -moz-box-shadow:  $border-shadow;
  box-shadow: $border-shadow;
}

@mixin animation($animation) {
  -webkit-animation: $animation;
  -o-animation: $animation;
  animation: $animation;
}

@mixin placeholder {
  &::-webkit-input-placeholder {@content}
  &:-moz-placeholder           {@content}
  &::-moz-placeholder          {@content}
  &:-ms-input-placeholder      {@content}
}

@mixin bg-cover() {
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center center;
}

@mixin display-flex() {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

@mixin icon() {
  position: relative;
  display: inline-block;
  padding-right: px2rem(26);

  &:before {
    position: absolute;
    top: 50%;
    margin-top: -4px;
    left: 50%;
    display: inline-block;
    font-family: 'huttopia-icon';
    font-size: px2rem(26);
    font-style: normal;
    font-weight: normal;
    line-height: 1;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    @include transform(translate(-50%, -50%));
  }
}

@keyframes grow {
  from { @include transform(translate3d(-50%, -50%, 0)); }
  to { @include transform(translate3d(-50%, -50%, 0) scale(1.15)); }
}

@mixin splitWidthInColumn($nbColumn, $space, $withBorder: true) {
  padding: #{$space * 2} #{$space};
  width: calc(100% / #{$nbColumn});

  @if $withBorder {
    border-right: 1px solid rgba(#979797, 0.2);
  }

  &:nth-child(#{$nbColumn}n) {
    @if $withBorder {
      border-right: 0;
    }
    padding: #{$space * 2} 0 #{$space * 2} #{$space};
  }

  &:nth-child(#{$nbColumn}n + 1) {
    padding: #{$space * 2} #{$space} #{$space * 2} 0;
    position: relative;

    @if $withBorder {
      &:after {
        background: rgba(#979797, 0.2);
        content: '';
        display: block;
        height: 1px;
        left: 0;
        padding: 0 15px;
        position: absolute;
        top: 0;
        width: calc(97.5% * #{$nbColumn});
      }
    }
  }
}
